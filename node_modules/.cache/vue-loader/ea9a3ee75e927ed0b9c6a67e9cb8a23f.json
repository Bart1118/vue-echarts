{"remainingRequest":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\hello.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\hello.vue","mtime":1595416638820},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\nexport default {\n  data () {\n    return {\n      weatherDataMax:[],\n      weatherDataMin:[],\n      weatherDataMean:[],\n      listMax:{},\n      listMin:{},\n      listMean:{},\n      year:[],\n      myChart:null,\n      option :{\n        title: {\n          text: '每年气温变化',\n          subtext: '基于Hadoop大数据'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['最高气温', '最低气温','平均气温']\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none'\n            },\n            dataView: {readOnly: false},\n            magicType: {type: ['line', 'bar']},\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: []\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            formatter: '{value} °C'\n          }\n        },\n        series: [\n          {\n            name: '最高气温',\n            type: 'line',\n            data: [],\n            markPoint: {\n              data: [\n                {type: 'max', name: '最大值'},\n                {type: 'min', name: '最小值'}\n              ]\n            },\n            markLine: {\n              data: [\n                {type: 'average', name: '平均值'}\n              ]\n            }\n          },\n          {\n            name: '最低气温',\n            type: 'line',\n            data: [],\n            markPoint: {\n              data: [\n                {type: 'max', name: '最大值'},\n                {type: 'min', name: '最小值'}\n              ]\n            },\n            markLine: {\n              data: [\n                {type: 'average', name: '平均值'}\n              ]\n            }\n          },\n          {\n            name: '平均气温',\n            type: 'line',\n            data: [],\n            markPoint: {\n              data: [\n                {type: 'max', name: '最大值'},\n                {type: 'min', name: '最小值'}\n              ]\n            },\n            markLine: {\n              data: [\n                {type: 'average', name: '平均值'}\n              ]\n            }\n          }\n        ]\n      }\n    }\n  },\n  mounted(){\n    // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\n    this.getEchartData()\n  },\n  watch: {\n    //观察option的变化\n    option: {\n      handler(newVal, oldVal) {\n        if (this.myChart) {\n          if (newVal) {\n            this.myChart.setOption(newVal);\n          } else {\n            this.myChart.setOption(oldVal);\n          }\n        } else {\n          this.init();\n        }\n      },\n      deep: true //对象内部属性的监听，关键。\n    }\n  },\n  methods: {\n    getEchartData () {\n      this.$http.get('http://localhost:80/temperature/max').then(response => {\n        this.listMax=response.body.data\n        for(let i in this.listMax){\n          this.year.push(i)\n          this.weatherDataMax.push(this.listMax[i])\n        }\n        window.console.log(this.year)\n        window.console.log(this.weatherDataMax)\n      },function (err) {\n        window.console.log(err)\n      })\n      this.$http.get('http://localhost:80/temperature/min').then(response => {\n        this.listMin = response.body.data\n        for(let i in this.listMin){\n          this.weatherDataMin.push(this.listMin[i])\n        }\n        window.console.log(this.weatherDataMin)\n      },function (err) {\n        window.console.log(err)\n      })\n      this.$http.get('http://localhost:80/temperature/mean').then(response => {\n        this.listMean = response.body.data\n        for(let i in this.listMean){\n          this.weatherDataMean.push(this.listMean[i])\n        }\n        window.console.log(this.weatherDataMean)\n      },function (err) {\n        window.console.log(err)\n      })\n      this.option.xAxis.data = this.year;\n      this.option.series[0].data = this.weatherDataMax;\n      this.option.series[1].data = this.weatherDataMin;\n      this.option.series[2].data = this.weatherDataMean;\n      let chart = this.$refs.chart\n      this.myChart = this.$echarts.init(chart)\n      this.myChart.setOption(this.option,true)\n    }\n  }\n}\n",{"version":3,"sources":["hello.vue"],"names":[],"mappingsfile":"hello.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div ref=\"chart\" style=\"width:100%;height:600px\"></div>\n</template>\n<script>\n  export default {\n    data () {\n      return {\n        weatherDataMax:[],\n        weatherDataMin:[],\n        weatherDataMean:[],\n        listMax:{},\n        listMin:{},\n        listMean:{},\n        year:[],\n        myChart:null,\n        option :{\n          title: {\n            text: '每年气温变化',\n            subtext: '基于Hadoop大数据'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['最高气温', '最低气温','平均气温']\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              dataZoom: {\n                yAxisIndex: 'none'\n              },\n              dataView: {readOnly: false},\n              magicType: {type: ['line', 'bar']},\n              restore: {},\n              saveAsImage: {}\n            }\n          },\n          xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            data: []\n          },\n          yAxis: {\n            type: 'value',\n            axisLabel: {\n              formatter: '{value} °C'\n            }\n          },\n          series: [\n            {\n              name: '最高气温',\n              type: 'line',\n              data: [],\n              markPoint: {\n                data: [\n                  {type: 'max', name: '最大值'},\n                  {type: 'min', name: '最小值'}\n                ]\n              },\n              markLine: {\n                data: [\n                  {type: 'average', name: '平均值'}\n                ]\n              }\n            },\n            {\n              name: '最低气温',\n              type: 'line',\n              data: [],\n              markPoint: {\n                data: [\n                  {type: 'max', name: '最大值'},\n                  {type: 'min', name: '最小值'}\n                ]\n              },\n              markLine: {\n                data: [\n                  {type: 'average', name: '平均值'}\n                ]\n              }\n            },\n            {\n              name: '平均气温',\n              type: 'line',\n              data: [],\n              markPoint: {\n                data: [\n                  {type: 'max', name: '最大值'},\n                  {type: 'min', name: '最小值'}\n                ]\n              },\n              markLine: {\n                data: [\n                  {type: 'average', name: '平均值'}\n                ]\n              }\n            }\n          ]\n        }\n      }\n    },\n    mounted(){\n      // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\n      this.getEchartData()\n    },\n    watch: {\n      //观察option的变化\n      option: {\n        handler(newVal, oldVal) {\n          if (this.myChart) {\n            if (newVal) {\n              this.myChart.setOption(newVal);\n            } else {\n              this.myChart.setOption(oldVal);\n            }\n          } else {\n            this.init();\n          }\n        },\n        deep: true //对象内部属性的监听，关键。\n      }\n    },\n    methods: {\n      getEchartData () {\n        this.$http.get('http://localhost:80/temperature/max').then(response => {\n          this.listMax=response.body.data\n          for(let i in this.listMax){\n            this.year.push(i)\n            this.weatherDataMax.push(this.listMax[i])\n          }\n          window.console.log(this.year)\n          window.console.log(this.weatherDataMax)\n        },function (err) {\n          window.console.log(err)\n        })\n        this.$http.get('http://localhost:80/temperature/min').then(response => {\n          this.listMin = response.body.data\n          for(let i in this.listMin){\n            this.weatherDataMin.push(this.listMin[i])\n          }\n          window.console.log(this.weatherDataMin)\n        },function (err) {\n          window.console.log(err)\n        })\n        this.$http.get('http://localhost:80/temperature/mean').then(response => {\n          this.listMean = response.body.data\n          for(let i in this.listMean){\n            this.weatherDataMean.push(this.listMean[i])\n          }\n          window.console.log(this.weatherDataMean)\n        },function (err) {\n          window.console.log(err)\n        })\n        this.option.xAxis.data = this.year;\n        this.option.series[0].data = this.weatherDataMax;\n        this.option.series[1].data = this.weatherDataMin;\n        this.option.series[2].data = this.weatherDataMean;\n        let chart = this.$refs.chart\n        this.myChart = this.$echarts.init(chart)\n        this.myChart.setOption(this.option,true)\n      }\n    }\n  }\n</script>"]}]}