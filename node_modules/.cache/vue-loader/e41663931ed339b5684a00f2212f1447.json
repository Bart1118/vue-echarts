{"remainingRequest":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\rainfall.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\rainfall.vue","mtime":1595422649928},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\nexport default {\n    data () {\n        return {\n            rainfallAmount:[],\n            rainfallDay:[],\n            listRainfallAmount:{},\n            listRainfallDay:{},\n            rainYear:[],\n            myChart:null,\n            option : {\n                title: {\n                    text: '每年降雨情况',\n                    subtext: '基于Hadoop大数据'\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                legend: {\n                    data: ['降雨天数','降水量']\n                },\n                toolbox: {\n                    show: true,\n                    feature: {\n                        magicType: {show: true, type: ['line', 'bar']},\n                        restore: {show: true},\n                        saveAsImage: {show: true}\n                    }\n                },\n                calculable: true,\n                xAxis:\n                    {\n                        type: 'category',\n                        data: []\n                    },\n                yAxis:\n                    {\n                        type: 'value'\n                    },\n                series: [\n                    {\n                        name: '降雨天数',\n                        type: 'bar',\n                        data: [],\n                        markPoint: {\n                            data: [\n                                {type: 'max', name: '最大值'},\n                                {type: 'min', name: '最小值'}\n                            ]\n                        },\n                        markLine: {\n                            data: [\n                                {type: 'average', name: '平均值'}\n                            ]\n                        }\n                    },\n                    {\n                        name: '降水量',\n                        type: 'bar',\n                        data: [],\n                        markPoint: {\n                            data: [\n                                {type: 'max', name: '最大值'},\n                                {type: 'min', name: '最小值'}\n                            ]\n                        },\n                        markLine: {\n                            data: [\n                                {type: 'average', name: '平均值'}\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    },\n    mounted(){\n        // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\n        this.getEchartData()\n    },\n    watch: {\n        //观察option的变化\n        option: {\n            handler(newVal, oldVal) {\n                if (this.myChart) {\n                    if (newVal) {\n                        this.myChart.setOption(newVal);\n                    } else {\n                        this.myChart.setOption(oldVal);\n                    }\n                } else {\n                    this.init();\n                }\n            },\n            deep: true //对象内部属性的监听，关键。\n        }\n    },\n    methods: {\n        getEchartData () {\n            this.$http.get('http://localhost:80/rainfall').then(response => {\n                this.listRainfallAmount=response.body.data\n                for(let i in this.listRainfallAmount){\n                    this.rainYear.push(i)\n                    this.rainfallAmount.push(this.listRainfallAmount[i])\n                }\n                window.console.log(this.rainYear)\n                window.console.log(this.rainfallAmount)\n            },function (err) {\n                window.console.log(err)\n            })\n            this.$http.get('http://localhost:80/rainday').then(response => {\n                this.listRainfallDay = response.body.data\n                for(let i in this.listRainfallDay){\n                    this.rainfallDay.push(this.listRainfallDay[i])\n                }\n                window.console.log(this.rainfallDay)\n            },function (err) {\n                window.console.log(err)\n            })\n            this.option.xAxis.data = this.rainYear;\n            this.option.series[0].data = this.rainfallDay;\n            this.option.series[1].data = this.rainfallAmount;\n            let chart2 = this.$refs.chart2\n            this.myChart = this.$echarts.init(chart2)\n            this.myChart.setOption(this.option,true)\n        }\n    }\n}\n",{"version":3,"sources":["rainfall.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"rainfall.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div ref=\"chart2\" style=\"width:800%;height:600px\"></div>\r\n</template>\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                rainfallAmount:[],\r\n                rainfallDay:[],\r\n                listRainfallAmount:{},\r\n                listRainfallDay:{},\r\n                rainYear:[],\r\n                myChart:null,\r\n                option : {\r\n                    title: {\r\n                        text: '每年降雨情况',\r\n                        subtext: '基于Hadoop大数据'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        data: ['降雨天数','降水量']\r\n                    },\r\n                    toolbox: {\r\n                        show: true,\r\n                        feature: {\r\n                            magicType: {show: true, type: ['line', 'bar']},\r\n                            restore: {show: true},\r\n                            saveAsImage: {show: true}\r\n                        }\r\n                    },\r\n                    calculable: true,\r\n                    xAxis:\r\n                        {\r\n                            type: 'category',\r\n                            data: []\r\n                        },\r\n                    yAxis:\r\n                        {\r\n                            type: 'value'\r\n                        },\r\n                    series: [\r\n                        {\r\n                            name: '降雨天数',\r\n                            type: 'bar',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        },\r\n                        {\r\n                            name: '降水量',\r\n                            type: 'bar',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        mounted(){\r\n            // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\r\n            this.getEchartData()\r\n        },\r\n        watch: {\r\n            //观察option的变化\r\n            option: {\r\n                handler(newVal, oldVal) {\r\n                    if (this.myChart) {\r\n                        if (newVal) {\r\n                            this.myChart.setOption(newVal);\r\n                        } else {\r\n                            this.myChart.setOption(oldVal);\r\n                        }\r\n                    } else {\r\n                        this.init();\r\n                    }\r\n                },\r\n                deep: true //对象内部属性的监听，关键。\r\n            }\r\n        },\r\n        methods: {\r\n            getEchartData () {\r\n                this.$http.get('http://localhost:80/rainfall').then(response => {\r\n                    this.listRainfallAmount=response.body.data\r\n                    for(let i in this.listRainfallAmount){\r\n                        this.rainYear.push(i)\r\n                        this.rainfallAmount.push(this.listRainfallAmount[i])\r\n                    }\r\n                    window.console.log(this.rainYear)\r\n                    window.console.log(this.rainfallAmount)\r\n                },function (err) {\r\n                    window.console.log(err)\r\n                })\r\n                this.$http.get('http://localhost:80/rainday').then(response => {\r\n                    this.listRainfallDay = response.body.data\r\n                    for(let i in this.listRainfallDay){\r\n                        this.rainfallDay.push(this.listRainfallDay[i])\r\n                    }\r\n                    window.console.log(this.rainfallDay)\r\n                },function (err) {\r\n                    window.console.log(err)\r\n                })\r\n                this.option.xAxis.data = this.rainYear;\r\n                this.option.series[0].data = this.rainfallDay;\r\n                this.option.series[1].data = this.rainfallAmount;\r\n                let chart2 = this.$refs.chart2\r\n                this.myChart = this.$echarts.init(chart2)\r\n                this.myChart.setOption(this.option,true)\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}