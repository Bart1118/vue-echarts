{"remainingRequest":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\forecast.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\forecast.vue","mtime":1595422791972},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data () {\n        return {\n            show:true,\n            unshow:false,\n            date: {\n                Time: '',\n                Month:'',\n                Day:''\n            },\n            rules: {\n                Time: [\n                    { type: 'date', required: true, message: '请选择日期及时间', trigger: 'change' }\n                ]\n            },\n            list: [],\n            preciseDate:[],\n            year: [],\n            month: [],\n            day: [],\n            station: [],\n            temperature: [],\n            maxTemperature: [],\n            minTemperature: [],\n            rainfall: [],\n            isRain: [],\n            myChart:null,\n            option : {\n                title: {\n                    text: '未来7天天气预测'\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                legend: {\n                    data: ['温度', '最高温度', '最低温度']\n                },\n                grid: {\n                    left: '3%',\n                    right: '4%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n                toolbox: {\n                    feature: {\n                        magicType: {type: ['line', 'bar']},\n                        restore: {},\n                        saveAsImage: {}\n                    }\n                },\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    data: []\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series: [\n                    {\n                        name: '温度',\n                        type: 'line',\n                        stack: '总量',\n                        data: [],\n                        markPoint: {\n                            data: [\n                                {type: 'max', name: '最大值'},\n                                {type: 'min', name: '最小值'}\n                            ]\n                        },\n                        markLine: {\n                            data: [\n                                {type: 'average', name: '平均值'}\n                            ]\n                        }\n                    },\n                    {\n                        name: '最高温度',\n                        type: 'line',\n                        stack: '总量',\n                        data: [],\n                        markPoint: {\n                            data: [\n                                {type: 'max', name: '最大值'},\n                                {type: 'min', name: '最小值'}\n                            ]\n                        },\n                        markLine: {\n                            data: [\n                                {type: 'average', name: '平均值'}\n                            ]\n                        }\n                    },\n                    {\n                        name: '最低温度',\n                        type: 'line',\n                        stack: '总量',\n                        data: [],\n                        markPoint: {\n                            data: [\n                                {type: 'max', name: '最大值'},\n                                {type: 'min', name: '最小值'}\n                            ]\n                        },\n                        markLine: {\n                            data: [\n                                {type: 'average', name: '平均值'}\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    },\n    mounted(){\n        // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\n        this.getEchartData()\n    },\n    watch: {\n        //观察option的变化\n        option: {\n            handler(newVal, oldVal) {\n                if (this.myChart) {\n                    if (newVal) {\n                        this.myChart.setOption(newVal);\n                    } else {\n                        this.myChart.setOption(oldVal);\n                    }\n                } else {\n                    this.init();\n                }\n            },\n            deep: true //对象内部属性的监听，关键。\n        }\n    },\n    methods: {\n        formatDate () {\n            let date = new Date(this.date.Time)\n            /*let y = date.getFullYear()*/\n            let M = date.getMonth() + 1\n            M = M < 10 ? (M) : M\n            let d = date.getDate();\n            d = d < 10 ? ('0' + d) : d\n            /*let h = date.getHours()\n            h = h < 10 ? ('0' + h) : h*/\n            /*let m = date.getMinutes()\n            m = m < 10 ? ('0' + m) : m\n            let s = date.getSeconds()\n            s = s < 10 ? ('0' + s) : s*/\n            this.date.Month=M\n            this.date.Day=d\n        },\n        confirmDate (formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.formatDate ()\n                    window.console.log(this.date.Month)\n                    window.console.log(this.date.Day)\n                    this.show = !this.show,this.unshow=!this.unshow\n                    this.$http.get('http://localhost:80/weather/nextweek/' + \"?month=\"+this.date.Month+\"&day=\"+this.date.Day).then(response => {\n                        // 注意： 通过 $http 获取到的数据，都在 result.body 中放着\n                        if (response.status === 200) {\n                            // 成功了\n                            let jsonObj = JSON.parse(JSON.stringify(response.body.data))\n                            for(let i in jsonObj){\n                                this.year.push(jsonObj[i].year)\n                                this.month.push(jsonObj[i].month)\n                                this.day.push(jsonObj[i].day)\n                                this.preciseDate.push(jsonObj[i].year+\"-\"+jsonObj[i].month+\"-\"+jsonObj[i].day)\n                                this.station.push(jsonObj[i].station)\n                                this.temperature.push(jsonObj[i].temperature)\n                                this.maxTemperature.push(jsonObj[i].maxTemperature)\n                                this.minTemperature.push(jsonObj[i].minTemperature)\n                                this.rainfall.push(jsonObj[i].rainfall)\n                                this.isRain.push(jsonObj[i].isRain)\n                            }\n                            this.list=response.body.data\n                            window.console.log(this.preciseDate)\n                        } else {\n                            // 失败了\n                            alert('获取数据失败！')\n                        }\n                    })\n                }\n            })\n        },\n        resetForm (formName) {\n            this.$refs[formName].resetFields()\n        },\n        getEchartData () {\n            this.option.xAxis.data = this.preciseDate;\n            this.option.series[0].data = this.temperature;\n            this.option.series[1].data = this.maxTemperature;\n            this.option.series[2].data = this.minTemperature;\n            let chart3 = this.$refs.chart3\n            this.myChart = this.$echarts.init(chart3)\n            this.myChart.setOption(this.option,true)\n        }\n    }\n}\n",{"version":3,"sources":["forecast.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"forecast.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n    <div v-show=\"show\">\r\n        <el-form :model=\"date\" :rules=\"rules\" ref=\"date\" label-width=\"100px\" class=\"demo\">\r\n            <el-form-item label=\"贴子时间\" prop=\"Time\">\r\n                <el-date-picker v-model=\"date.Time\" type=\"datetime\" placeholder=\"选择日期时间\">\r\n                </el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"confirmDate('date')\">立即预测</el-button>\r\n                <el-button @click=\"resetForm('date')\">重置</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n    <div v-show=\"unshow\">\r\n        <div ref=\"chart3\" style=\"width:1600%;height:600px\"></div>\r\n    </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                show:true,\r\n                unshow:false,\r\n                date: {\r\n                    Time: '',\r\n                    Month:'',\r\n                    Day:''\r\n                },\r\n                rules: {\r\n                    Time: [\r\n                        { type: 'date', required: true, message: '请选择日期及时间', trigger: 'change' }\r\n                    ]\r\n                },\r\n                list: [],\r\n                preciseDate:[],\r\n                year: [],\r\n                month: [],\r\n                day: [],\r\n                station: [],\r\n                temperature: [],\r\n                maxTemperature: [],\r\n                minTemperature: [],\r\n                rainfall: [],\r\n                isRain: [],\r\n                myChart:null,\r\n                option : {\r\n                    title: {\r\n                        text: '未来7天天气预测'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        data: ['温度', '最高温度', '最低温度']\r\n                    },\r\n                    grid: {\r\n                        left: '3%',\r\n                        right: '4%',\r\n                        bottom: '3%',\r\n                        containLabel: true\r\n                    },\r\n                    toolbox: {\r\n                        feature: {\r\n                            magicType: {type: ['line', 'bar']},\r\n                            restore: {},\r\n                            saveAsImage: {}\r\n                        }\r\n                    },\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: []\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value'\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '温度',\r\n                            type: 'line',\r\n                            stack: '总量',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        },\r\n                        {\r\n                            name: '最高温度',\r\n                            type: 'line',\r\n                            stack: '总量',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        },\r\n                        {\r\n                            name: '最低温度',\r\n                            type: 'line',\r\n                            stack: '总量',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        mounted(){\r\n            // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\r\n            this.getEchartData()\r\n        },\r\n        watch: {\r\n            //观察option的变化\r\n            option: {\r\n                handler(newVal, oldVal) {\r\n                    if (this.myChart) {\r\n                        if (newVal) {\r\n                            this.myChart.setOption(newVal);\r\n                        } else {\r\n                            this.myChart.setOption(oldVal);\r\n                        }\r\n                    } else {\r\n                        this.init();\r\n                    }\r\n                },\r\n                deep: true //对象内部属性的监听，关键。\r\n            }\r\n        },\r\n        methods: {\r\n            formatDate () {\r\n                let date = new Date(this.date.Time)\r\n                /*let y = date.getFullYear()*/\r\n                let M = date.getMonth() + 1\r\n                M = M < 10 ? (M) : M\r\n                let d = date.getDate();\r\n                d = d < 10 ? ('0' + d) : d\r\n                /*let h = date.getHours()\r\n                h = h < 10 ? ('0' + h) : h*/\r\n                /*let m = date.getMinutes()\r\n                m = m < 10 ? ('0' + m) : m\r\n                let s = date.getSeconds()\r\n                s = s < 10 ? ('0' + s) : s*/\r\n                this.date.Month=M\r\n                this.date.Day=d\r\n            },\r\n            confirmDate (formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        this.formatDate ()\r\n                        window.console.log(this.date.Month)\r\n                        window.console.log(this.date.Day)\r\n                        this.show = !this.show,this.unshow=!this.unshow\r\n                        this.$http.get('http://localhost:80/weather/nextweek/' + \"?month=\"+this.date.Month+\"&day=\"+this.date.Day).then(response => {\r\n                            // 注意： 通过 $http 获取到的数据，都在 result.body 中放着\r\n                            if (response.status === 200) {\r\n                                // 成功了\r\n                                let jsonObj = JSON.parse(JSON.stringify(response.body.data))\r\n                                for(let i in jsonObj){\r\n                                    this.year.push(jsonObj[i].year)\r\n                                    this.month.push(jsonObj[i].month)\r\n                                    this.day.push(jsonObj[i].day)\r\n                                    this.preciseDate.push(jsonObj[i].year+\"-\"+jsonObj[i].month+\"-\"+jsonObj[i].day)\r\n                                    this.station.push(jsonObj[i].station)\r\n                                    this.temperature.push(jsonObj[i].temperature)\r\n                                    this.maxTemperature.push(jsonObj[i].maxTemperature)\r\n                                    this.minTemperature.push(jsonObj[i].minTemperature)\r\n                                    this.rainfall.push(jsonObj[i].rainfall)\r\n                                    this.isRain.push(jsonObj[i].isRain)\r\n                                }\r\n                                this.list=response.body.data\r\n                                window.console.log(this.preciseDate)\r\n                            } else {\r\n                                // 失败了\r\n                                alert('获取数据失败！')\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            resetForm (formName) {\r\n                this.$refs[formName].resetFields()\r\n            },\r\n            getEchartData () {\r\n                this.option.xAxis.data = this.preciseDate;\r\n                this.option.series[0].data = this.temperature;\r\n                this.option.series[1].data = this.maxTemperature;\r\n                this.option.series[2].data = this.minTemperature;\r\n                let chart3 = this.$refs.chart3\r\n                this.myChart = this.$echarts.init(chart3)\r\n                this.myChart.setOption(this.option,true)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}