{"remainingRequest":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\hello.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\hello.vue","mtime":1595416638820},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      weatherDataMax: [],\n      weatherDataMin: [],\n      weatherDataMean: [],\n      listMax: {},\n      listMin: {},\n      listMean: {},\n      year: [],\n      myChart: null,\n      option: {\n        title: {\n          text: '每年气温变化',\n          subtext: '基于Hadoop大数据'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['最高气温', '最低气温', '平均气温']\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none'\n            },\n            dataView: {\n              readOnly: false\n            },\n            magicType: {\n              type: ['line', 'bar']\n            },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: []\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            formatter: '{value} °C'\n          }\n        },\n        series: [{\n          name: '最高气温',\n          type: 'line',\n          data: [],\n          markPoint: {\n            data: [{\n              type: 'max',\n              name: '最大值'\n            }, {\n              type: 'min',\n              name: '最小值'\n            }]\n          },\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值'\n            }]\n          }\n        }, {\n          name: '最低气温',\n          type: 'line',\n          data: [],\n          markPoint: {\n            data: [{\n              type: 'max',\n              name: '最大值'\n            }, {\n              type: 'min',\n              name: '最小值'\n            }]\n          },\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值'\n            }]\n          }\n        }, {\n          name: '平均气温',\n          type: 'line',\n          data: [],\n          markPoint: {\n            data: [{\n              type: 'max',\n              name: '最大值'\n            }, {\n              type: 'min',\n              name: '最小值'\n            }]\n          },\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值'\n            }]\n          }\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\n    this.getEchartData();\n  },\n  watch: {\n    //观察option的变化\n    option: {\n      handler: function handler(newVal, oldVal) {\n        if (this.myChart) {\n          if (newVal) {\n            this.myChart.setOption(newVal);\n          } else {\n            this.myChart.setOption(oldVal);\n          }\n        } else {\n          this.init();\n        }\n      },\n      deep: true //对象内部属性的监听，关键。\n\n    }\n  },\n  methods: {\n    getEchartData: function getEchartData() {\n      var _this = this;\n\n      this.$http.get('http://localhost:80/temperature/max').then(function (response) {\n        _this.listMax = response.body.data;\n\n        for (var i in _this.listMax) {\n          _this.year.push(i);\n\n          _this.weatherDataMax.push(_this.listMax[i]);\n        }\n\n        window.console.log(_this.year);\n        window.console.log(_this.weatherDataMax);\n      }, function (err) {\n        window.console.log(err);\n      });\n      this.$http.get('http://localhost:80/temperature/min').then(function (response) {\n        _this.listMin = response.body.data;\n\n        for (var i in _this.listMin) {\n          _this.weatherDataMin.push(_this.listMin[i]);\n        }\n\n        window.console.log(_this.weatherDataMin);\n      }, function (err) {\n        window.console.log(err);\n      });\n      this.$http.get('http://localhost:80/temperature/mean').then(function (response) {\n        _this.listMean = response.body.data;\n\n        for (var i in _this.listMean) {\n          _this.weatherDataMean.push(_this.listMean[i]);\n        }\n\n        window.console.log(_this.weatherDataMean);\n      }, function (err) {\n        window.console.log(err);\n      });\n      this.option.xAxis.data = this.year;\n      this.option.series[0].data = this.weatherDataMax;\n      this.option.series[1].data = this.weatherDataMin;\n      this.option.series[2].data = this.weatherDataMean;\n      var chart = this.$refs.chart;\n      this.myChart = this.$echarts.init(chart);\n      this.myChart.setOption(this.option, true);\n    }\n  }\n};",{"version":3,"sources":["hello.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"chart\" style=\"width:100%;height:600px\"></div>\n</template>\n<script>\n  export default {\n    data () {\n      return {\n        weatherDataMax:[],\n        weatherDataMin:[],\n        weatherDataMean:[],\n        listMax:{},\n        listMin:{},\n        listMean:{},\n        year:[],\n        myChart:null,\n        option :{\n          title: {\n            text: '每年气温变化',\n            subtext: '基于Hadoop大数据'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['最高气温', '最低气温','平均气温']\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              dataZoom: {\n                yAxisIndex: 'none'\n              },\n              dataView: {readOnly: false},\n              magicType: {type: ['line', 'bar']},\n              restore: {},\n              saveAsImage: {}\n            }\n          },\n          xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            data: []\n          },\n          yAxis: {\n            type: 'value',\n            axisLabel: {\n              formatter: '{value} °C'\n            }\n          },\n          series: [\n            {\n              name: '最高气温',\n              type: 'line',\n              data: [],\n              markPoint: {\n                data: [\n                  {type: 'max', name: '最大值'},\n                  {type: 'min', name: '最小值'}\n                ]\n              },\n              markLine: {\n                data: [\n                  {type: 'average', name: '平均值'}\n                ]\n              }\n            },\n            {\n              name: '最低气温',\n              type: 'line',\n              data: [],\n              markPoint: {\n                data: [\n                  {type: 'max', name: '最大值'},\n                  {type: 'min', name: '最小值'}\n                ]\n              },\n              markLine: {\n                data: [\n                  {type: 'average', name: '平均值'}\n                ]\n              }\n            },\n            {\n              name: '平均气温',\n              type: 'line',\n              data: [],\n              markPoint: {\n                data: [\n                  {type: 'max', name: '最大值'},\n                  {type: 'min', name: '最小值'}\n                ]\n              },\n              markLine: {\n                data: [\n                  {type: 'average', name: '平均值'}\n                ]\n              }\n            }\n          ]\n        }\n      }\n    },\n    mounted(){\n      // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\n      this.getEchartData()\n    },\n    watch: {\n      //观察option的变化\n      option: {\n        handler(newVal, oldVal) {\n          if (this.myChart) {\n            if (newVal) {\n              this.myChart.setOption(newVal);\n            } else {\n              this.myChart.setOption(oldVal);\n            }\n          } else {\n            this.init();\n          }\n        },\n        deep: true //对象内部属性的监听，关键。\n      }\n    },\n    methods: {\n      getEchartData () {\n        this.$http.get('http://localhost:80/temperature/max').then(response => {\n          this.listMax=response.body.data\n          for(let i in this.listMax){\n            this.year.push(i)\n            this.weatherDataMax.push(this.listMax[i])\n          }\n          window.console.log(this.year)\n          window.console.log(this.weatherDataMax)\n        },function (err) {\n          window.console.log(err)\n        })\n        this.$http.get('http://localhost:80/temperature/min').then(response => {\n          this.listMin = response.body.data\n          for(let i in this.listMin){\n            this.weatherDataMin.push(this.listMin[i])\n          }\n          window.console.log(this.weatherDataMin)\n        },function (err) {\n          window.console.log(err)\n        })\n        this.$http.get('http://localhost:80/temperature/mean').then(response => {\n          this.listMean = response.body.data\n          for(let i in this.listMean){\n            this.weatherDataMean.push(this.listMean[i])\n          }\n          window.console.log(this.weatherDataMean)\n        },function (err) {\n          window.console.log(err)\n        })\n        this.option.xAxis.data = this.year;\n        this.option.series[0].data = this.weatherDataMax;\n        this.option.series[1].data = this.weatherDataMin;\n        this.option.series[2].data = this.weatherDataMean;\n        let chart = this.$refs.chart\n        this.myChart = this.$echarts.init(chart)\n        this.myChart.setOption(this.option,true)\n      }\n    }\n  }\n</script>"],"sourceRoot":"src/components"}]}