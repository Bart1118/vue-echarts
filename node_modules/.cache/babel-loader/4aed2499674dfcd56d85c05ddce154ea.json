{"remainingRequest":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\rainfall.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\rainfall.vue","mtime":1595422649928},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      rainfallAmount: [],\n      rainfallDay: [],\n      listRainfallAmount: {},\n      listRainfallDay: {},\n      rainYear: [],\n      myChart: null,\n      option: {\n        title: {\n          text: '每年降雨情况',\n          subtext: '基于Hadoop大数据'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['降雨天数', '降水量']\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            magicType: {\n              show: true,\n              type: ['line', 'bar']\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        calculable: true,\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '降雨天数',\n          type: 'bar',\n          data: [],\n          markPoint: {\n            data: [{\n              type: 'max',\n              name: '最大值'\n            }, {\n              type: 'min',\n              name: '最小值'\n            }]\n          },\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值'\n            }]\n          }\n        }, {\n          name: '降水量',\n          type: 'bar',\n          data: [],\n          markPoint: {\n            data: [{\n              type: 'max',\n              name: '最大值'\n            }, {\n              type: 'min',\n              name: '最小值'\n            }]\n          },\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值'\n            }]\n          }\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\n    this.getEchartData();\n  },\n  watch: {\n    //观察option的变化\n    option: {\n      handler: function handler(newVal, oldVal) {\n        if (this.myChart) {\n          if (newVal) {\n            this.myChart.setOption(newVal);\n          } else {\n            this.myChart.setOption(oldVal);\n          }\n        } else {\n          this.init();\n        }\n      },\n      deep: true //对象内部属性的监听，关键。\n\n    }\n  },\n  methods: {\n    getEchartData: function getEchartData() {\n      var _this = this;\n\n      this.$http.get('http://localhost:80/rainfall').then(function (response) {\n        _this.listRainfallAmount = response.body.data;\n\n        for (var i in _this.listRainfallAmount) {\n          _this.rainYear.push(i);\n\n          _this.rainfallAmount.push(_this.listRainfallAmount[i]);\n        }\n\n        window.console.log(_this.rainYear);\n        window.console.log(_this.rainfallAmount);\n      }, function (err) {\n        window.console.log(err);\n      });\n      this.$http.get('http://localhost:80/rainday').then(function (response) {\n        _this.listRainfallDay = response.body.data;\n\n        for (var i in _this.listRainfallDay) {\n          _this.rainfallDay.push(_this.listRainfallDay[i]);\n        }\n\n        window.console.log(_this.rainfallDay);\n      }, function (err) {\n        window.console.log(err);\n      });\n      this.option.xAxis.data = this.rainYear;\n      this.option.series[0].data = this.rainfallDay;\n      this.option.series[1].data = this.rainfallAmount;\n      var chart2 = this.$refs.chart2;\n      this.myChart = this.$echarts.init(chart2);\n      this.myChart.setOption(this.option, true);\n    }\n  }\n};",{"version":3,"sources":["rainfall.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div ref=\"chart2\" style=\"width:800%;height:600px\"></div>\r\n</template>\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                rainfallAmount:[],\r\n                rainfallDay:[],\r\n                listRainfallAmount:{},\r\n                listRainfallDay:{},\r\n                rainYear:[],\r\n                myChart:null,\r\n                option : {\r\n                    title: {\r\n                        text: '每年降雨情况',\r\n                        subtext: '基于Hadoop大数据'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        data: ['降雨天数','降水量']\r\n                    },\r\n                    toolbox: {\r\n                        show: true,\r\n                        feature: {\r\n                            magicType: {show: true, type: ['line', 'bar']},\r\n                            restore: {show: true},\r\n                            saveAsImage: {show: true}\r\n                        }\r\n                    },\r\n                    calculable: true,\r\n                    xAxis:\r\n                        {\r\n                            type: 'category',\r\n                            data: []\r\n                        },\r\n                    yAxis:\r\n                        {\r\n                            type: 'value'\r\n                        },\r\n                    series: [\r\n                        {\r\n                            name: '降雨天数',\r\n                            type: 'bar',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        },\r\n                        {\r\n                            name: '降水量',\r\n                            type: 'bar',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        mounted(){\r\n            // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\r\n            this.getEchartData()\r\n        },\r\n        watch: {\r\n            //观察option的变化\r\n            option: {\r\n                handler(newVal, oldVal) {\r\n                    if (this.myChart) {\r\n                        if (newVal) {\r\n                            this.myChart.setOption(newVal);\r\n                        } else {\r\n                            this.myChart.setOption(oldVal);\r\n                        }\r\n                    } else {\r\n                        this.init();\r\n                    }\r\n                },\r\n                deep: true //对象内部属性的监听，关键。\r\n            }\r\n        },\r\n        methods: {\r\n            getEchartData () {\r\n                this.$http.get('http://localhost:80/rainfall').then(response => {\r\n                    this.listRainfallAmount=response.body.data\r\n                    for(let i in this.listRainfallAmount){\r\n                        this.rainYear.push(i)\r\n                        this.rainfallAmount.push(this.listRainfallAmount[i])\r\n                    }\r\n                    window.console.log(this.rainYear)\r\n                    window.console.log(this.rainfallAmount)\r\n                },function (err) {\r\n                    window.console.log(err)\r\n                })\r\n                this.$http.get('http://localhost:80/rainday').then(response => {\r\n                    this.listRainfallDay = response.body.data\r\n                    for(let i in this.listRainfallDay){\r\n                        this.rainfallDay.push(this.listRainfallDay[i])\r\n                    }\r\n                    window.console.log(this.rainfallDay)\r\n                },function (err) {\r\n                    window.console.log(err)\r\n                })\r\n                this.option.xAxis.data = this.rainYear;\r\n                this.option.series[0].data = this.rainfallDay;\r\n                this.option.series[1].data = this.rainfallAmount;\r\n                let chart2 = this.$refs.chart2\r\n                this.myChart = this.$echarts.init(chart2)\r\n                this.myChart.setOption(this.option,true)\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/components"}]}