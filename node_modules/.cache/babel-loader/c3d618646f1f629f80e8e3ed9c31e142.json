{"remainingRequest":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\forecast.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\src\\components\\forecast.vue","mtime":1595422791972},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atom\\Desktop\\大数据\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      show: true,\n      unshow: false,\n      date: {\n        Time: '',\n        Month: '',\n        Day: ''\n      },\n      rules: {\n        Time: [{\n          type: 'date',\n          required: true,\n          message: '请选择日期及时间',\n          trigger: 'change'\n        }]\n      },\n      list: [],\n      preciseDate: [],\n      year: [],\n      month: [],\n      day: [],\n      station: [],\n      temperature: [],\n      maxTemperature: [],\n      minTemperature: [],\n      rainfall: [],\n      isRain: [],\n      myChart: null,\n      option: {\n        title: {\n          text: '未来7天天气预测'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['温度', '最高温度', '最低温度']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            magicType: {\n              type: ['line', 'bar']\n            },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '温度',\n          type: 'line',\n          stack: '总量',\n          data: [],\n          markPoint: {\n            data: [{\n              type: 'max',\n              name: '最大值'\n            }, {\n              type: 'min',\n              name: '最小值'\n            }]\n          },\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值'\n            }]\n          }\n        }, {\n          name: '最高温度',\n          type: 'line',\n          stack: '总量',\n          data: [],\n          markPoint: {\n            data: [{\n              type: 'max',\n              name: '最大值'\n            }, {\n              type: 'min',\n              name: '最小值'\n            }]\n          },\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值'\n            }]\n          }\n        }, {\n          name: '最低温度',\n          type: 'line',\n          stack: '总量',\n          data: [],\n          markPoint: {\n            data: [{\n              type: 'max',\n              name: '最大值'\n            }, {\n              type: 'min',\n              name: '最小值'\n            }]\n          },\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值'\n            }]\n          }\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\n    this.getEchartData();\n  },\n  watch: {\n    //观察option的变化\n    option: {\n      handler: function handler(newVal, oldVal) {\n        if (this.myChart) {\n          if (newVal) {\n            this.myChart.setOption(newVal);\n          } else {\n            this.myChart.setOption(oldVal);\n          }\n        } else {\n          this.init();\n        }\n      },\n      deep: true //对象内部属性的监听，关键。\n\n    }\n  },\n  methods: {\n    formatDate: function formatDate() {\n      var date = new Date(this.date.Time);\n      /*let y = date.getFullYear()*/\n\n      var M = date.getMonth() + 1;\n      M = M < 10 ? M : M;\n      var d = date.getDate();\n      d = d < 10 ? '0' + d : d;\n      /*let h = date.getHours()\n      h = h < 10 ? ('0' + h) : h*/\n\n      /*let m = date.getMinutes()\n      m = m < 10 ? ('0' + m) : m\n      let s = date.getSeconds()\n      s = s < 10 ? ('0' + s) : s*/\n\n      this.date.Month = M;\n      this.date.Day = d;\n    },\n    confirmDate: function confirmDate(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.formatDate();\n\n          window.console.log(_this.date.Month);\n          window.console.log(_this.date.Day);\n          _this.show = !_this.show, _this.unshow = !_this.unshow;\n\n          _this.$http.get('http://localhost:80/weather/nextweek/' + \"?month=\" + _this.date.Month + \"&day=\" + _this.date.Day).then(function (response) {\n            // 注意： 通过 $http 获取到的数据，都在 result.body 中放着\n            if (response.status === 200) {\n              // 成功了\n              var jsonObj = JSON.parse(JSON.stringify(response.body.data));\n\n              for (var i in jsonObj) {\n                _this.year.push(jsonObj[i].year);\n\n                _this.month.push(jsonObj[i].month);\n\n                _this.day.push(jsonObj[i].day);\n\n                _this.preciseDate.push(jsonObj[i].year + \"-\" + jsonObj[i].month + \"-\" + jsonObj[i].day);\n\n                _this.station.push(jsonObj[i].station);\n\n                _this.temperature.push(jsonObj[i].temperature);\n\n                _this.maxTemperature.push(jsonObj[i].maxTemperature);\n\n                _this.minTemperature.push(jsonObj[i].minTemperature);\n\n                _this.rainfall.push(jsonObj[i].rainfall);\n\n                _this.isRain.push(jsonObj[i].isRain);\n              }\n\n              _this.list = response.body.data;\n              window.console.log(_this.preciseDate);\n            } else {\n              // 失败了\n              alert('获取数据失败！');\n            }\n          });\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    getEchartData: function getEchartData() {\n      this.option.xAxis.data = this.preciseDate;\n      this.option.series[0].data = this.temperature;\n      this.option.series[1].data = this.maxTemperature;\n      this.option.series[2].data = this.minTemperature;\n      var chart3 = this.$refs.chart3;\n      this.myChart = this.$echarts.init(chart3);\n      this.myChart.setOption(this.option, true);\n    }\n  }\n};",{"version":3,"sources":["forecast.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n    <div v-show=\"show\">\r\n        <el-form :model=\"date\" :rules=\"rules\" ref=\"date\" label-width=\"100px\" class=\"demo\">\r\n            <el-form-item label=\"贴子时间\" prop=\"Time\">\r\n                <el-date-picker v-model=\"date.Time\" type=\"datetime\" placeholder=\"选择日期时间\">\r\n                </el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"confirmDate('date')\">立即预测</el-button>\r\n                <el-button @click=\"resetForm('date')\">重置</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n    <div v-show=\"unshow\">\r\n        <div ref=\"chart3\" style=\"width:1600%;height:600px\"></div>\r\n    </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                show:true,\r\n                unshow:false,\r\n                date: {\r\n                    Time: '',\r\n                    Month:'',\r\n                    Day:''\r\n                },\r\n                rules: {\r\n                    Time: [\r\n                        { type: 'date', required: true, message: '请选择日期及时间', trigger: 'change' }\r\n                    ]\r\n                },\r\n                list: [],\r\n                preciseDate:[],\r\n                year: [],\r\n                month: [],\r\n                day: [],\r\n                station: [],\r\n                temperature: [],\r\n                maxTemperature: [],\r\n                minTemperature: [],\r\n                rainfall: [],\r\n                isRain: [],\r\n                myChart:null,\r\n                option : {\r\n                    title: {\r\n                        text: '未来7天天气预测'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        data: ['温度', '最高温度', '最低温度']\r\n                    },\r\n                    grid: {\r\n                        left: '3%',\r\n                        right: '4%',\r\n                        bottom: '3%',\r\n                        containLabel: true\r\n                    },\r\n                    toolbox: {\r\n                        feature: {\r\n                            magicType: {type: ['line', 'bar']},\r\n                            restore: {},\r\n                            saveAsImage: {}\r\n                        }\r\n                    },\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: []\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value'\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '温度',\r\n                            type: 'line',\r\n                            stack: '总量',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        },\r\n                        {\r\n                            name: '最高温度',\r\n                            type: 'line',\r\n                            stack: '总量',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        },\r\n                        {\r\n                            name: '最低温度',\r\n                            type: 'line',\r\n                            stack: '总量',\r\n                            data: [],\r\n                            markPoint: {\r\n                                data: [\r\n                                    {type: 'max', name: '最大值'},\r\n                                    {type: 'min', name: '最小值'}\r\n                                ]\r\n                            },\r\n                            markLine: {\r\n                                data: [\r\n                                    {type: 'average', name: '平均值'}\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        mounted(){\r\n            // 由于已经导入了 Vue-resource这个包，所以 ，可以直接通过  this.$http 来发起数据请求\r\n            this.getEchartData()\r\n        },\r\n        watch: {\r\n            //观察option的变化\r\n            option: {\r\n                handler(newVal, oldVal) {\r\n                    if (this.myChart) {\r\n                        if (newVal) {\r\n                            this.myChart.setOption(newVal);\r\n                        } else {\r\n                            this.myChart.setOption(oldVal);\r\n                        }\r\n                    } else {\r\n                        this.init();\r\n                    }\r\n                },\r\n                deep: true //对象内部属性的监听，关键。\r\n            }\r\n        },\r\n        methods: {\r\n            formatDate () {\r\n                let date = new Date(this.date.Time)\r\n                /*let y = date.getFullYear()*/\r\n                let M = date.getMonth() + 1\r\n                M = M < 10 ? (M) : M\r\n                let d = date.getDate();\r\n                d = d < 10 ? ('0' + d) : d\r\n                /*let h = date.getHours()\r\n                h = h < 10 ? ('0' + h) : h*/\r\n                /*let m = date.getMinutes()\r\n                m = m < 10 ? ('0' + m) : m\r\n                let s = date.getSeconds()\r\n                s = s < 10 ? ('0' + s) : s*/\r\n                this.date.Month=M\r\n                this.date.Day=d\r\n            },\r\n            confirmDate (formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        this.formatDate ()\r\n                        window.console.log(this.date.Month)\r\n                        window.console.log(this.date.Day)\r\n                        this.show = !this.show,this.unshow=!this.unshow\r\n                        this.$http.get('http://localhost:80/weather/nextweek/' + \"?month=\"+this.date.Month+\"&day=\"+this.date.Day).then(response => {\r\n                            // 注意： 通过 $http 获取到的数据，都在 result.body 中放着\r\n                            if (response.status === 200) {\r\n                                // 成功了\r\n                                let jsonObj = JSON.parse(JSON.stringify(response.body.data))\r\n                                for(let i in jsonObj){\r\n                                    this.year.push(jsonObj[i].year)\r\n                                    this.month.push(jsonObj[i].month)\r\n                                    this.day.push(jsonObj[i].day)\r\n                                    this.preciseDate.push(jsonObj[i].year+\"-\"+jsonObj[i].month+\"-\"+jsonObj[i].day)\r\n                                    this.station.push(jsonObj[i].station)\r\n                                    this.temperature.push(jsonObj[i].temperature)\r\n                                    this.maxTemperature.push(jsonObj[i].maxTemperature)\r\n                                    this.minTemperature.push(jsonObj[i].minTemperature)\r\n                                    this.rainfall.push(jsonObj[i].rainfall)\r\n                                    this.isRain.push(jsonObj[i].isRain)\r\n                                }\r\n                                this.list=response.body.data\r\n                                window.console.log(this.preciseDate)\r\n                            } else {\r\n                                // 失败了\r\n                                alert('获取数据失败！')\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            resetForm (formName) {\r\n                this.$refs[formName].resetFields()\r\n            },\r\n            getEchartData () {\r\n                this.option.xAxis.data = this.preciseDate;\r\n                this.option.series[0].data = this.temperature;\r\n                this.option.series[1].data = this.maxTemperature;\r\n                this.option.series[2].data = this.minTemperature;\r\n                let chart3 = this.$refs.chart3\r\n                this.myChart = this.$echarts.init(chart3)\r\n                this.myChart.setOption(this.option,true)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"],"sourceRoot":"src/components"}]}